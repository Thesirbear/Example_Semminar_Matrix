#ifndef MATRIX_H_
#define MATRIX_H_

#include <cstddef>

class Matrix {
   
public:
    // конструктор и декстурктор единственные ничего не возвращают
    Matrix() 
    {
        //Работать будет, но в целом это не правильно
        storage_ = nullptr;
        row_count_ = 0;
        column_count_ = 0;
    }
    
private:
    // default constructor exist
    // для new Matrix[] обязательно должен быть констуктор по умолчанию либо его суррогат(компилятор?)
    // память распределяющая в куче(динамическая) динамическая т.к. размер памяти известен в runtime
    // ручная память(для своих классов и структур?)(может маллок)
    //    // Далее идут члены класса вида поля(поля), которые определяют разметку объекта(layout structer)
    // double* storage_ = nullptr;
    // double* storage_{};
    //В принципе инициализировать внутри разметки можно, НО мы воспользуемся единой точки инитициализации точки входа
    // И точки выхода из объекта
    double* storage_;
    size_t row_count_;
    size_t column_count_;
    
};

#endif
